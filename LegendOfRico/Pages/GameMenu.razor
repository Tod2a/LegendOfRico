@using LegendOfRico.Data

<div class="gameMenu">
    <p>Personnage: @Game.Player.Name</p>
    <p>Position: [@Game.Player.PositionI][@Game.Player.PositionJ]@Game.GameMap.MapLayout[Game.Player.PositionI][Game.Player.PositionJ].Name</p>
    <p>Niveau: @Game.Player.Level</p>
    <p>HP: @Game.Player.GetHpDisplay()</p>
    <p>@Game.Player.GetStatsDisplay()</p>
    <p>Expérience: @Game.Player.GetXpDisplay()</p>
    <p>Argent: @Game.Player.Coins</p>
    <p data-toggle="tooltip" data-placement="top" title="@Game.Player.CharacterWeapon.Description">
        Arme: @Game.Player.CharacterWeapon.ItemName
        @if (!(Game.Player.CharacterWeapon.GetType() == typeof(Fist)) && Game.FormShow != TypeOfShow.Fight)
        {
            <button @onclick=Game.Player.UnequipWeapon>Déséquiper</button>
        }
    </p>
    <p data-toggle="tooltip" data-placement="top" title="@Game.Player.CharacterArmor.Description">
        Armure: @Game.Player.CharacterArmor.ItemName
        @if (!(Game.Player.CharacterArmor.GetType() == typeof(Topless)) && Game.FormShow != TypeOfShow.Fight)
        {
            <button @onclick=Game.Player.UnequipArmor>Déséquiper</button>
        }
    </p>
    <p data-toggle="tooltip" data-placement="top" title="@Game.Player.CharacterShield.Description">
        Bouclier: @Game.Player.CharacterShield.ItemName
        @if (!(Game.Player.CharacterShield.GetType() == typeof(FistShield)) && Game.FormShow != TypeOfShow.Fight)
        {
            <button @onclick=Game.Player.UnequipShield>Déséquiper</button>
        }
    </p>
    @if (Game.GameMap.MapLayout[Game.Player.PositionI][Game.Player.PositionJ].SquareBiome.BiomeType == TypeOfBiome.Village && !Game.Player.IsRested)
    {
        <button @onclick="Game.Player.Rest">Se reposer</button>
    }
    @if(Game.FormShow == TypeOfShow.Map)
    {
        <button @onclick="ShowInventory">Inventaire</button>
        <button @onclick="ShowQuest">Liste des quêtes</button>
        @if (Game.GameMap.MapLayout[Game.Player.PositionI][Game.Player.PositionJ].HasQuestTarget == true)
        {
            <button @onclick="ShowQuestGiver">Donneur de quêtes</button>
        }
    }
    
    @if (Game.GameMap.MapLayout[Game.Player.PositionI][Game.Player.PositionJ].HasNPC == true)
    {
        <button @onclick="Merch">Marchand</button>
    }
    <!--<button onclick="() => Save(game.Player)">Sauvegarde</button>-->
    <button @onclick="Deconnection">Deconnexion</button>
    <!--<button @onclick="Lvl">Lvlup</button>-->
</div>

@code {
    [Parameter]
    public Game Game { get; set; }
    [Parameter]
    public EventCallback TypeOfShowChange { get; set; }

    void ShowQuest ()
    {
        Game.SwitchShowQuestList();
        TypeOfShowChange.InvokeAsync();
    }

    void ShowInventory ()
    {
        Game.SwitchShowInventoryList();
        TypeOfShowChange.InvokeAsync();
    }

    void ShowQuestGiver ()
    {
        Game.SwitchShowQuestGiver();
        TypeOfShowChange.InvokeAsync();
    }

    void Deconnection()
    {
        Game.Deconnection();
        TypeOfShowChange.InvokeAsync();
    }

    void Lvl()
    {
        Game.LevelUp();
    }

    void Merch()
    {
        Game.FormShow = TypeOfShow.Merchant;
        TypeOfShowChange.InvokeAsync();
    }
}
