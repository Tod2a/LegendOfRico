@using LegendOfRico.Data

<!--Page de collecte affichée quand on clic sur le bouton "collecte" pour tenter de compléter la quête-->
<div class="layoutGame" @onkeydown="HandleKeyDown" @onkeydown:preventDefault=true tabindex="0">
    <div class="displayGame">
        <!--Menu de guache-->
        <div class="gameMenu">
            <p>Nombre à collecter: @Game.Player.CollectQuest.CurrentTarget</p>
            @if (Game.Player.CollectQuest.QuestEnd && Game.Player.CollectQuest.CurrentTarget == 0)
            {
                <p><button @onclick="Valid">Valid quest</button></p>
            }
            <p><button @onclick="Quit">Quitter</button></p>
        </div>
        <!--Affichage de la map (tableau classique dans lequel on affiche les Squares-->
        <div class="mapDisplay">
            @if (!Game.Player.CollectQuest.QuestEnd)
            {
                <table border="1" class="CollectMap" @ref="mapref" tabindex="0" autofocus>
                    @for (int i = 0; i < 10; i++)
                    {
                        <tr>
                            @for (int j = 0; j < 10; j++)
                            {
                                @if (i == Game.Player.CollectPosI && j == Game.Player.CollectPosJ)
                                {
                                    <td>
                                        <div style="background-image: url('@Game.Player.CollectQuest.CollectMap[i][j].SquareBiome.ImageUrl');">
                                            <img src="@Game.Player.MapSprite" alt="Image Player" class="character-image">
                                        </div>
                                    </td>
                                }
                                else if (Game.Player.CollectQuest.CollectMap[i][j].HasQuestTarget)
                                {
                                    <td>
                                        <div style="background-image: url('@Game.Player.CollectQuest.CollectMap[i][j].SquareBiome.ImageUrl');">
                                            <img src="@Game.Player.CollectQuest.TargetUrl" alt="Image Target" class="character-image">
                                        </div>
                                    </td>
                                }
                                else if (Game.Player.CollectQuest.CollectMap[i][j].HasMonsterCollectQuest)
                                {
                                    <td>
                                        <div style="background-image: url('@Game.Player.CollectQuest.CollectMap[i][j].SquareBiome.ImageUrl');">
                                            <img src="@Game.Player.CollectQuest.MonsterUrl" alt="Image Monstre" class="character-image">
                                        </div>
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        <div style="background-image: url('@Game.Player.CollectQuest.CollectMap[i][j].SquareBiome.ImageUrl');"></div>
                                    </td>
                                }

                            }
                        </tr>
                    }
                </table>
            }
            <!--Afficahge des messages si la quête est terminée (victoire/défaite)-->
            else if (Game.Player.CollectQuest.QuestEnd && Game.Player.CollectQuest.CurrentTarget > 0)
            {
                <div class="intro">
                <p>Vous êtes tombé sur un monstre, essayez encore</p>
                </div>
            }
            else 
            {
                <div class="intro">
                <p>Vous avez tout collecté, bravo</p>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Game Game { get; set; }
    [Parameter]
    public EventCallback TypeOfShowChange { get; set; }
    public ElementReference mapref;

    //Validation de la quête
    void Valid ()
    {
        Game.ValidQuestCollect();
        TypeOfShowChange.InvokeAsync();
    }

    //Quitter la page de quête (utilisé si on marche sur un monstre)
    void Quit()
    {
        Game.Player.CollectPosI = 0;
        Game.Player.CollectPosJ = 5;
        Game.Player.CollectQuest.QuestEnd = false;
        Game.Player.CollectQuest.CurrentTarget = 10;
        Game.FormShow = TypeOfShow.Map;
        TypeOfShowChange.InvokeAsync();
    }

    //Pour éviter de devoir cliquer sur la carte au chargement de la page
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await mapref.FocusAsync();
    }

    //Fonction de lien des touches du clavier au fonctions de déplacement du personnage
    private void HandleKeyDown(KeyboardEventArgs e)
    {

        switch (e.Key)
        {
            case "ArrowLeft":
                Game.GoLeftCollect();
                TypeOfShowChange.InvokeAsync();
                break;
            case "ArrowRight":
                Game.GoRightCollect();
                TypeOfShowChange.InvokeAsync();
                break;
            case "ArrowUp":
                Game.GoUpCollect();
                TypeOfShowChange.InvokeAsync();
                break;
            case "ArrowDown":
                Game.GoDownCollect();
                TypeOfShowChange.InvokeAsync();
                break;
        }
        Game.GameMap.UpdateMapDisplay(Game.Player);
    }
}
