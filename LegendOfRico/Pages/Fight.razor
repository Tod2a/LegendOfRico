@using LegendOfRico.Data

<div class="displayGame">
    <div class="gameMenu">
        <button @onclick="Autowin">Autowin</button>
    </div>
    <div class="fight">
        <div class="fightBox">
            <p>@Game.FightMessage</p>
        </div>
        <div class="fightDisplay" style="background-image: url('@Game.GameMap.MapLayout[Game.Player.PositionI][Game.Player.PositionJ].SquareBiome.FightUrl');">
            <div class="opponent">
                <div class="spriteFlex"><img class="sprite" src="@Game.MonsterFight.fightImgUrl" alt="Image fight Monster"></div>
                <div class="stats">
                    <div class="HPBar"><p>@Game.MonsterFight.MonsterCurrentHP / @Game.MonsterFight.MonsterHP</p></div>
                    <div class="Name"><p>@Game.MonsterFight.MonsterName</p></div>
                </div>
                
            </div>
            <div class="player">
                <div class="spriteFlex"><img class="sprite" src="@Game.Player.fightImgUrl" alt="Image fight Player"></div>
                <div class="stats">
                    <div class="Name"><p>@Game.Player.Name</p></div>
                    <div class="HPBar">@Game.Player.CurrentHitPoints / @Game.Player.MaxHitPoints</div>
                </div>
                
            </div>
        </div>
        <div class="fightMenu">
            <div class="actions">
                @if (Game.ShowFightSpells)
                {
                    @foreach (var spell in Game.Player.SpellBook)
                    {
                        <button @onclick="() => Game.Action(spell, Game)">@spell.SpellName</button>
                    }
                    <button @onclick="Game.SwitchFightInventory">go to inventaire</button>
                }
                else if (Game.ShowFightInventory)
                {
                    <button>Inventaire</button>
                    <button @onclick="Game.SwitchFightSpells">go to spells</button>
                }


            </div>
        </div>
    </div>

</div>

@code {
    [Parameter]
    public Game Game { get; set; }
    [Parameter]
    public EventCallback TypeOfShowChange { get; set; }

    void Autowin()
    {
        Game.FormShow = TypeOfShow.Map;
        TypeOfShowChange.InvokeAsync();
    }
}
