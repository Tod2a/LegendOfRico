@page "/"
@using LegendOfRico.Data

<PageTitle>The legend of Rico</PageTitle>
<h1 class="gameTitle">The legend of Rico</h1>
<div class="layoutGame" @onkeydown="HandleKeyDown" @onkeydown:preventDefault=true tabindex="0">
<div class="displayGame">
    <div class="gameMenu">
    <p>Personnage: @PersoTest.Name</p>
    <p>Position: [@PersoTest.PositionI][@PersoTest.PositionJ]@gameMap.MapLayout[PersoTest.PositionI][PersoTest.PositionJ].Name</p>
    </div>
    <div class="mapDisplay">
    <table border="1" class="Map">
        @for(int i = gameMap.StartI; i < gameMap.MaxI; i++)
        {
            <tr>
            @for (int j = gameMap.StartJ; j < gameMap.MaxJ; j++)
            {
                @if (i == PersoTest.PositionI && j == PersoTest.PositionJ)
                {
                    <td>
                        <div style="background-image: url('@gameMap.MapLayout[i][j].SquareBiome.ImageUrl');">
                            <img src="@PersoTest.MapSprite" alt="Image PersoTest" class="character-image">
                        </div>
                    </td>
                }
                else
                {
                    <td>
                        <div style="background-image: url('@gameMap.MapLayout[i][j].SquareBiome.ImageUrl');"></div>
                    </td>
                }
               
            }
            </tr>
        }
    </table>
    </div>
</div>
</div>

@code{
    //création d'un personnage test pour la map, création et gestion des personnages encore à définir
    public static Wizard PersoTest = new Wizard {Name = "Destructor", MapSprite = "img/character/spriteWizard.png" };

    //création de la map

    public Map gameMap = new Map { MapLevel = 1 };

    //modification de la fonction de blazor pour ajouter l'update de l'affichage de la map en fonctiond de l'emplacement du personnage

    protected override void OnInitialized()
    {
        gameMap.UpdateMapDisplay(PersoTest);

        base.OnInitialized();
    }

    //Fonction de gestion des bouton clavier
    private void HandleKeyDown(KeyboardEventArgs e)
    {

        switch (e.Key)
        {
            case "ArrowLeft":
                PersoTest.GoLeft();
                break;
            case "ArrowRight":
                PersoTest.GoRight();
                break;
            case "ArrowUp":
                PersoTest.GoUp();
                break;
            case "ArrowDown":
                PersoTest.GoDown();
                break;
        }
        gameMap.UpdateMapDisplay(PersoTest);
    }

 
    
}